当运行容器时，使用的镜像如果在本地中不存在，docker 就会自动从 docker 镜像仓库中下载，默认是从 Docker Hub 公共镜像源下载。
列出本地主机上的镜像：
docker images

[root@localhost ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
composetest_web     latest              c6d9f4a82a0f        20 hours ago        220MB
nginx               test                6234cf7b8d3d        20 hours ago        127MB
nginx               v3                  6234cf7b8d3d        20 hours ago        127MB
runoob/centos       6.7                 817581126fb7        21 hours ago        191MB
各个选项说明:
REPOSITORY：表示镜像的仓库源
TAG：镜像的标签
IMAGE ID：镜像ID
CREATED：镜像创建时间
SIZE：镜像大小
同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，如 ubuntu 仓库源里，有 15.10、14.04 等多个不同的版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。
所以，我们如果要使用版本为15.10的ubuntu系统镜像来运行容器时，命令如下：
docker run -t -i ubuntu:15.10 /bin/bash
参数说明：
-i: 交互式操作。
-t: 终端。
ubuntu:15.10: 这是指用 ubuntu 15.10 版本镜像为基础来启动容器。
/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。
如果你不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像。

获取镜像：
docker pull 镜像名称:版本号
例：docker pull ubuntu:13.10
版本号不填，默认是最新版latest

查找镜像：
docker search 镜像名称
例：docker search httpd

使用镜像：
docker run 镜像名称
例：docker run httpd

删除镜像：
docker rmi 镜像ID（IMAGE ID）
例：docker rmi 

创建镜像
更新镜像：
docker run -t -i ubuntu:15.10 /bin/bash
apt-get update
exit
提交容器副本：
docker commit -m="has update" -a="runoob" 8d8b1a00a98a runoob/ubuntu:v2
各个参数说明：
-m: 提交的描述信息
-a: 指定镜像作者
8d8b1a00a98a：容器 ID
runoob/ubuntu:v2: 指定要创建的目标镜像名
使用我们的新镜像 runoob/ubuntu 来启动一个容器：
docker run -t -i runoob/ubuntu:v2 /bin/bash
创建一个Dockerfile文件（文件内容后面会讲解）：
vi Dockerfile
构建镜像：
docker build -t runoob/centos:6.7 .
参数说明：
-t ：指定要创建的目标镜像名
. ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径
我们可以使用新的镜像来创建容器
docker run -t -i runoob/centos:6.7  /bin/bash
id runoob
uid=500(runoob) gid=500(runoob) groups=500(runoob)
从上面看到新镜像已经包含我们创建的用户 runoob。

设置镜像标签：
docker tag 860c279d2fec runoob/centos:dev
解析：docker tag 镜像ID，这里是 860c279d2fec ,用户名称、镜像源名(repository name)和新的标签名(tag)。
